{"version":3,"sources":["reducers/navigation.js","actions/navigation.js","reducers/stations.js","actions/stations.js","reducers/schedule.js","actions/schedule.js","reducers/availableSeats.js","actions/availableSeats.js","reducers/index.js","store.js","components/Header/styles.js","components/Header/Header.js","containers/HeaderContainer/HeaderContainer.js","components/Navigation/styles.js","components/Navigation/Navigation.js","containers/NavigationContainer/NavigationContainer.js","components/SearchForm/styles.js","components/SearchForm/SearchForm.js","containers/ScheduleSearchFormContainer/ScheduleSearchFormContainer.js","utils/index.js","components/ResultTable/styles.js","components/ResultTable/ResultTable.js","components/ScheduleList/styles.js","components/ResultTable/data.js","components/ScheduleList/ScheduleList.js","containers/ScheduleListContainer/ScheduleListContainer.js","pages/SchedulePage/SchedulePage.js","containers/AvailableSeatsSearchFormContainer/AvailableSeatsSearchFormContainer.js","components/AvailableSeatsList/styles.js","components/AvailableSeatsList/AvailableSeatsList.js","containers/AvailableSeatsListContainer/AvailableSeatsListContainer.js","pages/AvailableSeatsPage/AvailableSeatsPage.js","containers/MainContent/styles.js","containers/MainContent/MainContent.js","components/StationsErrorModal/styles.js","components/StationsErrorModal/StationsErrorModal.js","containers/StationsErrorModalContainer/StationsErrorModalContainer.js","containers/App/styles.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["defaultState","isOpen","navigation","state","arguments","length","undefined","type","Object","objectSpread","isFetching","list","error","stations","action","slice","params","data","schedule","availableSeats","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","dispatch","axios","method","url","then","response","fetchFailure","styles","theme","appBar","zIndex","modal","menuButton","defineProperty","marginRight","breakpoints","up","display","Header","_this$props","this","props","classes","toggleNav","react_default","a","createElement","AppBar_default","className","Toolbar_default","IconButton_default","color","aria-label","onClick","Menu_default","Typography_default","variant","Component","withStyles","connect","toolbar","mixins","width","flexShrink","drawerPaper","selected","backgroundColor","Navigation","container","isNavOpen","drawer","react","List_default","ListItem_default","button","component","NavLink","to","ListItemText_default","primary","Hidden_default","smUp","Drawer_default","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","form","alignItems","flexWrap","formControl","margin","spacing","unit","FORM_TYPES","SCHEDULE","AVAILABLE_SEATS","FIELD_NAMES","TRAIN_DATE","ORIGIN_STATION_ID","DESTINATION_STATION_ID","getStationOptions","key","value","concat","map","station","StationID","StationName","Zh_tw","SearchForm","_this$state","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","minDayjs","dayjs","startOf","maxDayjs","add","endOf","setDefaultState","field","setState","handleChange","name","e","target","handleCloseAlert","errMsgs","handleSubmit","preventDefault","push","trainDayjs","isBefore","isAfter","submit","trainDate","originStationID","destinationStationID","title","isSubmitable","onSubmit","FormControl_default","TextField_default","id","label","defaultValue","InputLabelProps","shrink","inputProps","min","format","max","onChange","InputLabel_default","htmlFor","NativeSelect_default","input","Input_default","Button_default","disabled","Dialog_default","fullWidth","maxWidth","DialogContent_default","errMsg","index","DialogContentText_default","DialogActions_default","defaultProps","_ref","baseURL","Promise","all","get","values","price","catch","fetchSchedule","pad","num","size","s","toString","getScheduleItem","fares","ticketType","trainNo","DailyTrainInfo","TrainNo","TrainDate","originTimeStr","OriginStopTime","DepartureTime","originTime","Date","getTime","destinationTimeStr","DestinationStopTime","ArrivalTime","destinationTime","duration","durationMin","Math","round","durationStr","floor","Number","find","fare","TicketType","Price","priceStr","toLocaleString","text","tableCell","padding","textAlign","ResultTable","handleSort","sortBy","ascending","initAscending","initSortBy","arr","_this2","columns","head","body","sortedBody","sort","b","Table_default","TableHead_default","TableRow_default","col","TableCell_default","sortable","TableSortLabel_default","active","direction","TableBody_default","row","root","paddingTop","ScheduleList","scheduleData","priceData","info","trainDateStr","replace","originStationName","destinationStationName","getScheduleInfo","tableBody","Fares","components_ResultTable_ResultTable","SchedulePage","ScheduleSearchFormContainer","ScheduleListContainer","fetchAvailableSeats","AvailableSeatsList","now","reduce","availableSeat","Direction","numStandardSeats","numBusinessSeats","StopStations","forEach","_ref2","StandardSeatStatus","BusinessSeatStatus","found","scheduleItem","getTableBody","AvailableSeats","orgiginStationID","orgIndex","desIndex","getDirection","AvailableSeatsPage","AvailableSeatsSearchFormContainer","AvailableSeatsListContainer","content","flexGrow","MainContent","console","log","Switch","Route","path","exact","position","top","left","transform","palette","background","boxShadow","shadows","StationsErrorModal","Modal_default","App","HashRouter","CssBaseline_default","HeaderContainer","NavigationContainer","containers_MainContent_MainContent","StationsErrorModalContainer","Boolean","location","hostname","match","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","ReactDOM","render","es","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec83ac16.chunk.js","sourcesContent":["import {\n  TOGGLE_NAV\n} from '../actions/navigation';\n\nconst defaultState = {\n  isOpen: false\n}\n\nconst navigation = (state = defaultState, action) => {\n  switch (action.type) {\n    case TOGGLE_NAV:\n      return {\n        ...state,\n        isOpen: !state.isOpen\n      };\n    default:\n      return state;\n  }\n}\n\nexport default navigation;","export const TOGGLE_NAV = 'TOGGLE_NAV';\n\nexport const toggleNav = () => ({\n  type: TOGGLE_NAV\n});","import {\n  FETCH_STATIONS_REQUEST,\n  FETCH_STATIONS_FAILURE,\n  FETCH_STATIONS_SUCCESS\n} from '../actions/stations';\n\nconst defaultState = {\n  isFetching: false,\n  list: [],\n  error: null,\n}\n\nconst stations = (state = defaultState, action) => {\n  switch (action.type) {\n    case FETCH_STATIONS_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        error: null,\n        list: []\n      }\n    case FETCH_STATIONS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        list: action.list.slice(0),\n      }\n    case FETCH_STATIONS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.error\n      }\n    default:\n      return state;\n  }\n}\n\nexport default stations;","import axios from 'axios';\n\nexport const FETCH_STATIONS_REQUEST = 'FETCH_STATIONS_REQUEST';\nexport const FETCH_STATIONS_FAILURE = 'FETCH_STATIONS_FAILURE';\nexport const FETCH_STATIONS_SUCCESS = 'FETCH_STATIONS_SUCCESS';\n\nconst fetchRequest = () => ({\n  type: FETCH_STATIONS_REQUEST\n});\n\nconst fetchFailure = (error = '取得車站基本資料時，發生錯誤！') => ({\n  type: FETCH_STATIONS_FAILURE,\n  error, \n});\n\nconst fetchSuccess = (list) => ({\n  type: FETCH_STATIONS_SUCCESS,\n  list\n});\n\nexport const fetchStations = () => {\n  return (dispatch) => {\n    dispatch(fetchRequest());\n    \n    return axios({\n      method: 'get',\n      url: 'https://ptx.transportdata.tw/MOTC/v2/Rail/THSR/Station?$select=StationID%2CStationName&$format=JSON'\n    })\n      .then(\n        response => {\n          dispatch(fetchSuccess(response.data));\n        },\n        error => {\n          dispatch(fetchFailure());\n        }\n      )\n  }\n}","import {\n  FETCH_SCHEDULE_REQUEST,\n  FETCH_SCHEDULE_FAILURE,\n  FETCH_SCHEDULE_SUCCESS\n} from '../actions/schedule';\n\nconst defaultState = {\n  isFetching: false,\n  params: null,\n  data: null,\n  error: null,\n}\n\nconst schedule = (state = defaultState, action) => {\n  switch (action.type) {\n    case FETCH_SCHEDULE_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        params: action.params,\n        data: null,\n        error: null,\n      }\n    case FETCH_SCHEDULE_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        data: action.data,\n      }\n    case FETCH_SCHEDULE_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.error\n      }\n    default:\n      return state;\n  }\n}\n\nexport default schedule;","import axios from 'axios';\n\nexport const FETCH_SCHEDULE_REQUEST = 'FETCH_SCHEDULE_REQUEST';\nexport const FETCH_SCHEDULE_FAILURE = 'FETCH_SCHEDULE_FAILURE';\nexport const FETCH_SCHEDULE_SUCCESS = 'FETCH_SCHEDULE_SUCCESS';\n\nconst fetchRequest = (params) => ({\n  type: FETCH_SCHEDULE_REQUEST,\n  params,\n});\n\nconst fetchFailure = (error = '取得列車時刻資料時，發生錯誤！') => ({\n  type: FETCH_SCHEDULE_FAILURE,\n  error, \n});\n\nconst fetchSuccess = (data) => ({\n  type: FETCH_SCHEDULE_SUCCESS,\n  data\n});\n\nexport const fetchSchedule = ({trainDate, originStationID, destinationStationID}) => {\n  return (dispatch) => {\n    dispatch(fetchRequest({trainDate, originStationID, destinationStationID}));\n\n    const baseURL = 'https://ptx.transportdata.tw/MOTC/v2/Rail/THSR';\n\n    return Promise.all([\n      axios.get(`${baseURL}/DailyTimetable/OD/${originStationID}/to/${destinationStationID}/${trainDate}?$format=JSON`),\n      axios.get(`${baseURL}/ODFare/${originStationID}/to/${destinationStationID}?$format=JSON`)\n    ]).then(values => {\n      dispatch(fetchSuccess({\n        schedule: values[0].data,\n        price: values[1].data\n      }));\n    }).catch(() => {\n      dispatch(fetchFailure());\n    });\n  }\n}","import {\n  FETCH_AVAILABLE_SEATS_REQUEST,\n  FETCH_AVAILABLE_SEATS_FAILURE,\n  FETCH_AVAILABLE_SEATS_SUCCESS\n} from '../actions/availableSeats';\n\nconst defaultState = {\n  isFetching: false,\n  params: null,\n  data: null,\n  error: null,\n}\n\nconst availableSeats = (state = defaultState, action) => {\n  switch (action.type) {\n    case FETCH_AVAILABLE_SEATS_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        params: action.params,\n        data: null,\n        error: null,\n      }\n    case FETCH_AVAILABLE_SEATS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        data: action.data,\n      }\n    case FETCH_AVAILABLE_SEATS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.error\n      }\n    default:\n      return state;\n  }\n}\n\nexport default availableSeats;","import axios from 'axios';\nimport dayjs from 'dayjs';\n\nexport const FETCH_AVAILABLE_SEATS_REQUEST = 'FETCH_AVAILABLE_SEATS_REQUEST';\nexport const FETCH_AVAILABLE_SEATS_FAILURE = 'FETCH_AVAILABLE_SEATS_FAILURE';\nexport const FETCH_AVAILABLE_SEATS_SUCCESS = 'FETCH_AVAILABLE_SEATS_SUCCESS';\n\nconst fetchRequest = (params) => ({\n  type: FETCH_AVAILABLE_SEATS_REQUEST,\n  params,\n});\n\nconst fetchFailure = (error = '取得尚有座位列車資料時，發生錯誤！') => ({\n  type: FETCH_AVAILABLE_SEATS_FAILURE,\n  error, \n});\n\nconst fetchSuccess = (data) => ({\n  type: FETCH_AVAILABLE_SEATS_SUCCESS,\n  data\n});\n\nexport const fetchAvailableSeats = ({originStationID, destinationStationID}) => {\n  return (dispatch) => {\n    dispatch(fetchRequest({originStationID, destinationStationID}));\n\n    const baseURL = 'https://ptx.transportdata.tw/MOTC/v2/Rail/THSR';\n\n    const trainDate = dayjs().format('YYYY-MM-DD');\n\n    return Promise.all([\n      axios.get(`${baseURL}/AvailableSeatStatusList/${originStationID}?$format=JSON`),\n      axios.get(`${baseURL}/ODFare/${originStationID}/to/${destinationStationID}?$format=JSON`),\n      axios.get(`${baseURL}/DailyTimetable/OD/${originStationID}/to/${destinationStationID}/${trainDate}?$format=JSON`)\n    ]).then(values => {\n      dispatch(fetchSuccess({\n        availableSeats: values[0].data,\n        price: values[1].data,\n        schedule: values[2].data,\n      }));\n    }).catch(() => {\n      dispatch(fetchFailure());\n    });\n  }\n}","import { combineReducers } from  'redux';\nimport navigation from './navigation';\nimport stations from './stations';\nimport schedule from './schedule';\nimport availableSeats from './availableSeats';\n\nexport default combineReducers({\n  navigation,\n  stations,\n  schedule,\n  availableSeats,\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from './reducers';\nimport { fetchStations } from './actions/stations';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(\n      thunkMiddleware\n    )\n  )\n);\n\nstore.dispatch(fetchStations());\n\nexport default store;","const styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.modal + 1,\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n});\n\nexport default styles;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './styles';\n\nclass Header extends Component {\n\n  render() {\n    const { classes, toggleNav } = this.props;\n\n    return (\n      <header>\n        <AppBar className={ classes.appBar }>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={toggleNav}\n              className={classes.menuButton}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h5\" color=\"inherit\">\n              高鐵列車查詢系統\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleNav: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(Header);","import { connect } from 'react-redux';\nimport { toggleNav } from '../../actions/navigation';\nimport Header from '../../components/Header';\n\nconst mapDispatchToProps = dispatch => ({\n  toggleNav: () => dispatch(toggleNav())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Header);","const navWidth = 210;\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  navigation: {\n    [theme.breakpoints.up('sm')]: {\n      width: navWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: navWidth,\n  },\n  selected: {\n    backgroundColor: '#eee'\n  }\n});\n\nexport default styles;","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Hidden from '@material-ui/core/Hidden';\nimport styles from './styles';\n\nclass Navigation extends Component {\n\n  render() {\n    const { classes, container, isNavOpen, toggleNav } = this.props;\n\n    const drawer = (\n      <Fragment>\n        <div className={ classes.toolbar }></div>\n          <List>\n            <ListItem button component={ NavLink } to=\"./\">\n              <ListItemText primary=\"列車時刻查詢\" />\n            </ListItem>\n            <ListItem button component={ NavLink } to=\"./available-seats\">\n              <ListItemText primary=\"尚有座位列車查詢\" />\n            </ListItem>\n          </List>\n      </Fragment>\n    );\n\n    return (\n      <nav className={ classes.navigation }>\n        <Hidden smUp>\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={isNavOpen}\n            onClose={toggleNav}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            { drawer }\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n          <Drawer \n            className={ classes.navigation }\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            { drawer }\n          </Drawer>\n        </Hidden>\n      </nav>\n    );\n  }\n}\n\nNavigation.propTypes = {\n  classes: PropTypes.object.isRequired,\n  container: PropTypes.object,\n  isNavOpen: PropTypes.bool.isRequired,\n  toggleNav: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Navigation);","import { connect } from 'react-redux';\nimport { toggleNav } from '../../actions/navigation';\nimport Navigation from '../../components/Navigation';\n\nconst mapStateToProps = (state) => ({\n  isNavOpen: state.navigation.isOpen\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleNav: () => dispatch(toggleNav())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Navigation);","const styles = theme => ({\n  form: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    width: 140\n  },\n});\n\nexport default styles;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport dayjs from 'dayjs';\nimport styles from './styles';\n\nexport const FORM_TYPES = {\n  SCHEDULE: 'schedule',\n  AVAILABLE_SEATS: 'availableSeats'\n}\n\nconst FIELD_NAMES = {\n  TRAIN_DATE: 'trainDate',\n  ORIGIN_STATION_ID: 'originStationID',\n  DESTINATION_STATION_ID: 'destinationStationID',\n}\n\nconst getStationOptions = (stations) => \n  [\n    <option key=\"-1\" value=\"\"></option>\n  ].concat(stations.list.map(station => (\n    <option\n      key={station.StationID}\n      value={station.StationID}\n    >\n      {station.StationName.Zh_tw}\n    </option>\n  )));\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      [FIELD_NAMES.TRAIN_DATE]: props.trainDate || '',\n      [FIELD_NAMES.ORIGIN_STATION_ID]: props.originStationID || '',\n      [FIELD_NAMES.DESTINATION_STATION_ID]: props.destinationStationID || '',\n      errMsgs: []\n    }\n  }\n\n  minDayjs = dayjs().startOf('day');\n\n  maxDayjs = dayjs().add(27, 'day').endOf('day');\n\n  setDefaultState = (field, value) => {\n    if (this.state[field] === '' && value) this.setState({[field]: value});\n  }\n\n  handleChange = name => e => {\n    this.setState({ [name]: e.target.value});\n  }\n\n  handleCloseAlert = () => {\n    this.setState({ errMsgs: []})\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errMsgs = [];\n\n    if (this.props.type === FORM_TYPES.SCHEDULE && this.state[FIELD_NAMES.TRAIN_DATE] === '') {\n      errMsgs.push('請選擇乘車日期');\n    } else {\n      const trainDayjs = dayjs(this.state[FIELD_NAMES.TRAIN_DATE]);\n      if (trainDayjs.isBefore(this.minDayjs) || trainDayjs.isAfter(this.maxDayjs)) {\n        errMsgs.push('乘車日期超出範圍');\n      }\n    }\n\n    if (this.state[FIELD_NAMES.ORIGIN_STATION_ID] === '') {\n      errMsgs.push('請選擇起程站');\n    }\n\n    if (this.state[FIELD_NAMES.DESTINATION_STATION_ID] === '') {\n      errMsgs.push('請選擇到達站');\n    }\n\n    if (\n      this.state[FIELD_NAMES.ORIGIN_STATION_ID] !== '' \n      && (this.state[FIELD_NAMES.ORIGIN_STATION_ID] === this.state[FIELD_NAMES.DESTINATION_STATION_ID])\n    ) {\n      errMsgs.push('起程站和到達站不得相同');\n    }\n\n    this.setState({errMsgs});\n\n    if (errMsgs.length > 0) return;\n\n    const { submit } = this.props;\n    if (typeof submit === 'function') submit(this.state);\n  }\n\n  render() {\n    const { classes, type, title, stations, trainDate, originStationID, destinationStationID, isSubmitable } = this.props;\n\n    // this.setDefaultState(FIELD_NAMES.TRAIN_DATE, trainDate);\n    // this.setDefaultState(FIELD_NAMES.ORIGIN_STATION_ID, originStationID);\n    // this.setDefaultState(FIELD_NAMES.DESTINATION_STATION_ID, destinationStationID);\n    \n    this.minDayjs = dayjs().startOf('day');\n    this.maxDayjs = dayjs().add(27, 'day').endOf('day');\n\n    return (\n      <div>\n        <Typography variant=\"h6\" color=\"inherit\">\n          {title}\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={this.handleSubmit}\n        >\n          {\n            type === FORM_TYPES.SCHEDULE &&\n            <FormControl className={classes.formControl}>\n              <TextField\n                id=\"date\"\n                label=\"乘車日期 *\"\n                type=\"date\"\n                defaultValue={trainDate}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  min: this.minDayjs.format('YYYY-MM-DD'),\n                  max: this.maxDayjs.format('YYYY-MM-DD')\n                }}\n                onChange={this.handleChange(FIELD_NAMES.TRAIN_DATE)}\n              />\n            </FormControl>\n          }\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"origin-station\">起程站 *</InputLabel>\n            <NativeSelect\n              defaultValue={originStationID}\n              input={<Input name=\"originStation\" id=\"origin-station\" />}\n              onChange={this.handleChange(FIELD_NAMES.ORIGIN_STATION_ID)}\n            >\n              { getStationOptions(stations) }\n            </NativeSelect>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"destination-station\">到達站 *</InputLabel>\n            <NativeSelect\n              defaultValue={destinationStationID}\n              input={<Input name=\"destinationStation\" id=\"destination-station\" />}\n              onChange={this.handleChange(FIELD_NAMES.DESTINATION_STATION_ID)}\n            >\n              { getStationOptions(stations) }\n            </NativeSelect>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={!isSubmitable}\n                onClick={this.handleSubmit}\n              >\n                查詢\n              </Button>\n          </FormControl>\n        </form>\n        <Dialog\n          open={this.state.errMsgs.length > 0}\n          onClose={this.handleCloseAlert}\n          fullWidth\n          maxWidth=\"xs\"\n        >\n          <DialogContent>\n            {\n              this.state.errMsgs.map((errMsg, index) => (\n                <DialogContentText key={index}>{errMsg}</DialogContentText>\n              ))\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={this.handleCloseAlert}\n            >\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nSearchForm.defaultProps = {\n  trainDate: dayjs().format('YYYY-MM-DD'),\n}\n\nSearchForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  type: PropTypes.oneOf([FORM_TYPES.SCHEDULE, FORM_TYPES.AVAILABLE_SEATS]).isRequired,\n  title: PropTypes.string,\n  stations: PropTypes.shape({\n    isFetching: PropTypes.bool.isRequired,\n    list: PropTypes.array.isRequired,\n  }).isRequired,\n  trainDate: PropTypes.string,\n  originStationID: PropTypes.string,\n  destinationStationID: PropTypes.string,\n  isSubmitable: PropTypes.bool.isRequired,\n  submit: PropTypes.func,\n}\n\nexport default withStyles(styles)(SearchForm);","import { connect } from 'react-redux';\nimport dayjs from 'dayjs';\nimport { fetchSchedule } from '../../actions/schedule';\nimport SearchForm from '../../components/SearchForm';\n\nconst mapStateToProps = (state) => ({\n  stations: state.stations,\n  trainDate: state.schedule.params ? state.schedule.params.trainDate : dayjs().format('YYYY-MM-DD'),\n  originStationID: state.schedule.params ? state.schedule.params.originStationID : '',\n  destinationStationID: state.schedule.params ? state.schedule.params.destinationStationID : '',\n  isSubmitable: state.stations.list.length > 0 && !state.schedule.isFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  submit: (data) => dispatch(fetchSchedule(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SearchForm);","export const pad = (num, size) => {\n  let s = num.toString();\n  while(s.length < size) s = '0' + s;\n  return s;\n}\n\nexport const getScheduleItem = (schedule, fares, ticketType) => {\n  const trainNo = schedule.DailyTrainInfo.TrainNo;\n  const trainDate = schedule.TrainDate;\n  const originTimeStr = schedule.OriginStopTime.DepartureTime;\n  const originTime = new Date(`${trainDate} ${originTimeStr}`).getTime();\n  const destinationTimeStr = schedule.DestinationStopTime.ArrivalTime;\n  const destinationTime = new Date(`${trainDate} ${destinationTimeStr}`).getTime();\n  const duration = destinationTime - originTime;\n  const durationMin = Math.round(duration / 1000 / 60);\n  const durationStr = `${pad(Math.floor(durationMin / 60), 2)}:${pad(durationMin % 60, 2)}`;\n  const price = Number(fares.find(fare => fare.TicketType === ticketType).Price);\n  const priceStr = `$${price.toLocaleString('en')} ${ticketType === '商務' ? '(商務)' : ''}`;\n\n  return {\n    key: trainNo,\n    trainNo: {\n      value: trainNo\n    },\n    originTime: {\n      value: originTime,\n      text: originTimeStr\n    },\n    destinationTime: {\n      value: destinationTime,\n      text: destinationTimeStr\n    },\n    duration: {\n      value: duration,\n      text: durationStr\n    },\n    price: {\n      value: price,\n      text: priceStr\n    }\n  }\n}","const styles = theme => ({\n  tableCell: {\n    padding: theme.spacing.unit,\n    textAlign: 'left'\n  }\n});\n\nexport default styles;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport styles from './styles';\n\nfunction sortArrayBy(arr, sortBy, ascending) {\n  if (sortBy === undefined) {\n    return arr.slice(0);\n  } else {\n    return arr.sort((a, b) => {\n      return (a[sortBy].value - b[sortBy].value) * (ascending ? 1 : -1);\n    });\n  }\n}\n\nclass ResultTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBy: props.initSortBy,\n      ascending: props.initAscending === undefined ? true : props.initAscending\n    }\n  }\n\n  handleSort = (sortBy) => (e) => {\n    const ascending = this.state.sortBy === sortBy ? !this.state.ascending : this.props.initAscending;\n    this.setState(state => ({\n      sortBy,\n      ascending\n    }));\n  }\n\n  render() {\n    const { classes, columns, head, body } = this.props;\n\n    const sortedBody = sortArrayBy(body, this.state.sortBy, this.state.ascending);\n\n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            {\n              columns.map(col => {\n                const text = head[col.key].text;\n                return (\n                  <TableCell\n                    className={classes.tableCell} \n                    key={ col.key }\n                  >\n                    {\n                      col.sortable ? (\n                        <TableSortLabel\n                          active={this.state.sortBy === col.key}\n                          direction={this.state.ascending ? 'asc' : 'desc'}\n                          onClick={this.handleSort(col.key)}\n                        >\n                          {text}\n                        </TableSortLabel>\n                      ) : text\n                    }\n                  </TableCell>\n                );\n              })\n            }\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            sortedBody.map(row => {\n              return (\n                <TableRow key={row.key}>\n                  {\n                    columns.map(col => {\n                      const text = row[col.key].text || row[col.key].value;\n                      return (\n                        <TableCell className={classes.tableCell} key={ col.key }>{ text }</TableCell>\n                      );\n                    })\n                  }\n                </TableRow>\n              )\n            })\n          }\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nResultTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  head: PropTypes.object.isRequired,\n  body: PropTypes.array.isRequired,\n  initSortBy: PropTypes.string,\n  initAscending: PropTypes.bool\n}\n\nexport default withStyles(styles)(ResultTable);","const styles = theme => ({\n  root: {\n    paddingTop: theme.spacing.unit * 5\n  }\n});\n\nexport default styles;","export const columns = [\n  { key: 'trainNo', sortable: false },\n  { key: 'originTime', sortable: true },\n  { key: 'destinationTime', sortable: true },\n  { key: 'duration', sortable: true},\n  { key: 'price', sortable: true}\n];\n\nexport const head = {\n  trainNo: { text: '車次' },\n  originTime: { text: '出發時間' },\n  destinationTime: { text: '到達時間' },\n  duration: { text: '行車時間' },\n  price: { text: '票價' }\n}","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { getScheduleItem } from '../../utils';\nimport ResultTable from '../ResultTable';\nimport styles from './styles';\n\nimport { columns, head } from '../ResultTable/data';\n\nconst getScheduleInfo = (stations, {trainDate, originStationID, destinationStationID}) => {\n  const trainDateStr = trainDate.replace('-', '/');\n  const originStationName = stations.list.find(station => station.StationID === originStationID).StationName.Zh_tw;\n  const destinationStationName = stations.list.find(station => station.StationID === destinationStationID).StationName.Zh_tw;\n  return `${trainDateStr} 從 ${originStationName} 到 ${destinationStationName} 列車時刻查詢結果：`;\n}\n\nconst getTableBody = (scheduleData, priceData) => scheduleData.map(schedule => {\n  return getScheduleItem(schedule, priceData[0].Fares, '標準');\n});\n\nclass ScheduleList extends Component {\n\n  render() {\n    const { classes, stations, schedule } = this.props;\n\n    const info = schedule.params ? getScheduleInfo(stations, schedule.params) : null;\n    const tableBody = schedule.data ? getTableBody(schedule.data.schedule, schedule.data.price) : null;\n\n    return (\n      <div className={classes.root}>\n        { schedule.error\n          ? <Typography variant=\"subtitle1\" color=\"inherit\">\n              {schedule.error}\n            </Typography>\n          : <Fragment>\n              { info &&\n                <Typography variant=\"subtitle1\" color=\"inherit\">\n                  {info}\n                </Typography>\n              }\n              { tableBody &&\n                <ResultTable\n                  columns={columns} \n                  head={head}\n                  body={tableBody}\n                  initSortBy=\"originTime\"\n                  initAscending={true}\n                />\n              }\n            </Fragment>\n        }\n      </div>\n    );\n  }\n}\n\nScheduleList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  stations: PropTypes.object,\n  schedule: PropTypes.object,\n}\n\nexport default withStyles(styles)(ScheduleList);","import { connect } from 'react-redux';\nimport ScheduleList from '../../components/ScheduleList';\n\nconst mapStateToProps = (state) => ({\n  stations: state.stations,\n  schedule: state.schedule\n});\n\nexport default connect(\n  mapStateToProps\n)(ScheduleList);","import React, { Component } from 'react';\nimport ScheduleSearchFormContainer from '../../containers/ScheduleSearchFormContainer';\nimport { FORM_TYPES } from '../../components/SearchForm';\nimport ScheduleListContainer from '../../containers/ScheduleListContainer';\n\nclass SchedulePage extends Component {\n\n  render() {\n    return (\n      <div>\n        <ScheduleSearchFormContainer\n          type={FORM_TYPES.SCHEDULE}\n          title=\"查詢列車時刻：\" \n        />\n        <ScheduleListContainer />\n      </div>\n    );\n  }\n}\n\nexport default SchedulePage;","import { connect } from 'react-redux';\nimport { fetchAvailableSeats } from '../../actions/availableSeats';\nimport SearchForm from '../../components/SearchForm';\n\nconst mapStateToProps = (state) => ({\n  stations: state.stations,\n  originStationID: state.availableSeats.params ? state.availableSeats.params.originStationID : '',\n  destinationStationID: state.availableSeats.params ? state.availableSeats.params.destinationStationID : '',\n  isSubmitable: state.stations.list.length > 0 && !state.availableSeats.isFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  submit: (data) => dispatch(fetchAvailableSeats(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SearchForm);","const styles = theme => ({\n  root: {\n    paddingTop: theme.spacing.unit * 5\n  }\n});\n\nexport default styles;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { getScheduleItem } from '../../utils';\nimport ResultTable from '../ResultTable';\nimport styles from './styles';\n\nimport { columns, head } from '../ResultTable/data';\n\nconst getScheduleInfo = (stations, {originStationID, destinationStationID}) => {\n  const originStationName = stations.list.find(station => station.StationID === originStationID).StationName.Zh_tw;\n  const destinationStationName = stations.list.find(station => station.StationID === destinationStationID).StationName.Zh_tw;\n  return `今天 從 ${originStationName} 到 ${destinationStationName} 尚有座位列車查詢結果：`;\n}\n\nconst getDirection = (stations, orgiginStationID, destinationStationID) => {\n  let orgIndex = 0;\n  let desIndex = 0;\n  stations.forEach((station, index) => {\n    if (station.StationID === orgiginStationID) {\n      orgIndex = index;\n    } else if (station.StationID === destinationStationID) {\n      desIndex = index;\n    }\n  });\n  return desIndex > orgIndex ? '0' : '1'; // '0: 南下', '1: 北上\n}\n\nconst getTableBody = (availableSeats, schedule, fares, direction) => {\n  const now = Date.now();\n\n  return availableSeats.reduce((list, availableSeat) => {\n    // 過濾方向\n    if (availableSeat.Direction.toString() !== direction) return list;\n\n    // 檢查各站座位\n    let numStandardSeats = 0;\n    let numBusinessSeats = 0;\n    availableSeat.StopStations.forEach(({StandardSeatStatus, BusinessSeatStatus}) => {\n      if (StandardSeatStatus === 'Available') numStandardSeats++;\n      if (BusinessSeatStatus === 'Available') numBusinessSeats++;\n    });\n\n    // 判斷票種\n    let ticketType = '';\n    if (numStandardSeats === availableSeat.StopStations.length) {\n      ticketType = '標準';\n    } else if (numBusinessSeats === availableSeat.StopStations.length) {\n      ticketType = '商務';\n    } else {\n      return list;\n    }\n\n    const found = schedule.find(s => s.DailyTrainInfo.TrainNo === availableSeat.TrainNo);\n    if (!found) return list;\n\n    const scheduleItem = getScheduleItem(found, fares, ticketType);\n\n    // 發車時間已過\n    if (scheduleItem.originTime.value < now) return list;\n\n    list.push(scheduleItem);\n    return list;\n\n  }, []);\n};\n\nclass AvailableSeatsList extends Component {\n\n  render() {\n    const { classes, stations, availableSeats } = this.props;\n\n    const info = availableSeats.params ? getScheduleInfo(stations, availableSeats.params) : null;\n    const tableBody = availableSeats.data \n      ? getTableBody(\n        availableSeats.data.availableSeats[0].AvailableSeats,\n        availableSeats.data.schedule,\n        availableSeats.data.price[0].Fares,\n        getDirection(\n          stations.list, \n          availableSeats.params.originStationID, \n          availableSeats.params.destinationStationID\n        )\n      )\n      : null;\n\n    return (\n      <div className={classes.root}>\n        { availableSeats.error\n          ? <Typography variant=\"subtitle1\" color=\"inherit\">\n              {availableSeats.error}\n            </Typography>\n          : <Fragment>\n              { info &&\n                <Typography variant=\"subtitle1\" color=\"inherit\">\n                  {info}\n                </Typography>\n              }\n              { tableBody \n                ? tableBody.length > 0\n                  ? <ResultTable \n                      columns={columns} \n                      head={head}\n                      body={tableBody}\n                      initSortBy=\"originTime\"\n                      initAscending={true}\n                    />\n                  : <Typography variant=\"subtitle2\" color=\"inherit\">無符合資料</Typography>\n                : null\n              }\n            </Fragment>\n        }\n      </div>\n    );\n  }\n}\n\nAvailableSeatsList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  stations: PropTypes.object,\n  availableSeats: PropTypes.object,\n}\n\nexport default withStyles(styles)(AvailableSeatsList);;","import { connect } from 'react-redux';\nimport AvailableSeatsList from '../../components/AvailableSeatsList';\n\nconst mapStateToProps = (state) => ({\n  stations: state.stations,\n  availableSeats: state.availableSeats\n});\n\nexport default connect(\n  mapStateToProps\n)(AvailableSeatsList);","import React, { Component } from 'react';\nimport AvailableSeatsSearchFormContainer from '../../containers/AvailableSeatsSearchFormContainer';\nimport { FORM_TYPES } from '../../components/SearchForm';\nimport AvailableSeatsListContainer from '../../containers/AvailableSeatsListContainer';\n\nclass AvailableSeatsPage extends Component {\n\n  render() {\n    return (\n      <div>\n        <AvailableSeatsSearchFormContainer\n          type={FORM_TYPES.AVAILABLE_SEATS}\n          title=\"查詢尚有座位列車：\" \n        />\n        <AvailableSeatsListContainer />\n      </div>\n    );\n  }\n}\n\nexport default AvailableSeatsPage;","const styles = theme => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nexport default styles;","import React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SchedulePage from '../../pages/SchedulePage';\nimport AvailableSeatsPage from '../../pages/AvailableSeatsPage';\nimport styles from './styles.js';\n\nclass MainContent extends Component {\n\n  render() {\n    const { classes } = this.props;\n\n    console.log(this.props);\n\n    return (\n      <main className={ classes.content }>\n        <div className={ classes.toolbar } />\n        <Switch>\n          <Route path=\"*/available-seats\" component={AvailableSeatsPage} />\n          <Route exact component={SchedulePage} />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nMainContent.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(MainContent);","const styles = theme => ({\n  paper: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    // width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    textAlign: 'center'\n  }\n})\n\nexport default styles;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './styles';\n\nclass StationsErrorModal extends Component {\n\n  render() {\n    const { classes, error } = this.props;\n    return error ? (\n      <Modal open>\n        <div className={classes.paper}>\n          <Typography variant=\"subtitle2\">{error}</Typography>\n        </div>\n      </Modal>\n    ) : null;\n  }\n}\n\nStationsErrorModal.propTypes = {\n  classes: PropTypes.object.isRequired,\n  error: PropTypes.string\n}\n\nexport default withStyles(styles)(StationsErrorModal);","import { connect } from 'react-redux';\nimport StationsErrorModal from '../../components/StationsErrorModal';\n\nconst mapStateToProps = (state) => ({\n  error: state.stations.error\n});\n\nexport default connect(\n  mapStateToProps,\n)(StationsErrorModal);","const styles = theme => ({\n  root: {\n    display: 'flex'\n  }\n});\n\nexport default styles;","import React, { Component } from 'react';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/core/styles';\nimport HeaderContainer from '../HeaderContainer';\nimport NavigationContainer from '../NavigationContainer';\nimport MainContent from '../MainContent';\nimport StationsErrorModalContainer from '../../containers/StationsErrorModalContainer';\nimport styles from './styles';\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Router>\n        <div className={ classes.root }>\n          <CssBaseline />\n          <HeaderContainer />\n          <NavigationContainer />\n          <MainContent />\n          <StationsErrorModalContainer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true; // material-ui: Migration to typography v2\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}